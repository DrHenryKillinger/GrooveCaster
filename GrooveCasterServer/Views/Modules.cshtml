@using System.Linq
@inherits Nancy.ViewEngines.Razor.NancyRazorViewBase<dynamic>
@{
    Layout = "_Layout.cshtml";
}

<nav class="navbar navbar-inverse navbar-fixed-top">
    <div class="container-fluid">
        <div class="navbar-header">
            <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar" aria-expanded="false" aria-controls="navbar">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            <a class="navbar-brand" href="/">GrooveCaster Admin Dashboard</a>
        </div>
        <div id="navbar" class="navbar-collapse collapse">
            <ul class="nav navbar-nav navbar-right">
                <li class="active"><a href="/">Dashboard</a></li>
                <li><a href="/me/settings">Settings</a></li>
                <li><a href="/logout">Logout</a></li>
            </ul>
        </div>
    </div>
</nav>
<div>
    <div class="container-fluid">
        <div class="row">
            <div class="col-sm-3 col-md-2 sidebar">
                <ul class="nav nav-sidebar">
                    <li><a href="/">Overview</a></li>
                    <li><a href="/guests">Guest Management</a></li>
                    <li><a href="/songs">Song Management</a></li>
                    @if (@Html.RenderContext.Context.CurrentUser.Claims.Contains("super"))
                    {
                        <li class="active"><a href="/modules">Module Management <span class="sr-only">(current)</span></a></li>
                        <li><a href="/settings">Core Settings</a></li>
                        <li><a href="/users">User Management</a></li>
                    }
                </ul>
            </div>
            <div class="col-sm-9 col-sm-offset-3 col-md-10 col-md-offset-2 main">
                <h1 class="page-header">
                    Modules
                    <a href="/modules/add" class="btn btn-primary btn-sm">New Module</a>
                </h1>
                <p>Modules are simple python scripts designed to provide additional functionality to GrooveCaster.</p>
                <p>Any module action (adding, editing, enabling, disabling, removing) will cause all modules to reload.</p>
                @foreach (var s_Pair in @Model.Errors)
                {
                    <div class="alert alert-danger">Module "@s_Pair.Key" failed to load:<br/>@s_Pair.Value</div>
                }

                @foreach (var s_Module in @Model.Modules)
                {
                    <div class="panel panel-default module-panel">
                        <div class="panel-heading">@s_Module.DisplayName (@s_Module.Name)</div>
                        <div class="panel-body">
                            <p>@s_Module.Description</p>
                            <a class="btn btn-primary" href="/modules/edit/@s_Module.Name">Edit</a>
                            @if (s_Module.Enabled)
                            {
                                <a class="btn btn-warning" href="/modules/disable/@s_Module.Name">Disable</a>
                            }
                            else
                            {
                                <a class="btn btn-success" href="/modules/enable/@s_Module.Name">Enable</a>
                            }
                            <a class="btn btn-danger" href="/modules/delete/@s_Module.Name">Delete</a>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>